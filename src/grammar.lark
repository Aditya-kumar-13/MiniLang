start: statement+

?statement: decl_stmt
          | assign_stmt
          | expr_stmt
          | print_stmt
          | if_stmt

decl_stmt: "let" NAME "=" expr TYPE ";"
assign_stmt: NAME "=" expr ";"
expr_stmt: expr ";"
print_stmt: "print" "(" expr ")" ";"
if_stmt: "if" "(" condition ")" "{" statement+ "}" ["else" "{" statement+ "}"]

condition: expr COMP expr
COMP: "==" | "!=" | ">" | "<" | ">=" | "<="


?expr: term
     | expr "+" term   -> add
     | expr "-" term   -> sub

?term: factor
     | term "*" factor -> mul
     | term "/" factor -> div

?factor: NUMBER        -> number
       | NAME          -> var
       | "(" expr ")"

TYPE: "int"
NAME: /[a-zA-Z_][a-zA-Z0-9_]*/
NUMBER: /[0-9]+/

%import common.WS
%ignore WS
